.copy TSTALL.txt = notext.txt


; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
;   Hello World!
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=NOTEXT.TXT
.COPY DEBUG.ERR=NOTEXT.TXT
.RUN HELLOW
;.TYPE DEBUG.ERR

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Test of LOWL macro definitions
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=NOTEXT.TXT
.COPY DEBUG.ERR=NOTEXT.TXT
.RUN LTEST4

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Validate machine-dependent logic
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=MILTON.TXT
.COPY DEBUG.ERR=NOTEXT.TXT
.RUN VALMDL

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests initial state of built-in tables and hashing function
;   Should be used as the first real test of a new implementation
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=NAMES.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests gradually more complicated constructions
;   Not comprehensive, but useful as general overall test
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=ESCALA.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests MC-ALTER (but resets environment so later tests not affected)
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=ALTER.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Checks detection of errors
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=ERRORS.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests macro expressions and macro-time statements
;   Macros tested are: MC-GO,MC-SET,MCSUB,MCLENG,MC-PVAR
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=MACROT.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests stack overflow, using endless recursion
;   Depth of nesting reached before overflow occurs will
;    vary between implementations
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=OVERFL.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests overriding, globals and locals,MC-NO macros and warnings
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=OVERRI.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests S-variables,startlines,stop markers and counting of lines
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=S.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests skips and inserts
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=SKIPIN.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests delimiter structures and scanning mechanism
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.COPY INPUT.ML1=STRUCT.ML1
.RUN ML1

.copy TSTALL.txt = TSTALL.txt, break.txt
.copy TSTALL.txt = TSTALL.txt, result.out
;.copy TSTALL.txt = TSTALL.txt, debug.err

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
;   Tests complete
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
.type TSTALL.txt
