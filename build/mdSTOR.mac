;
; Filename:         MDSTOR.MAC
;
; All the machine-dependent logic for the implementation of ML/I,
;       storage section
;
; Described in [LSUP] chapter 2

    UNIVERSAL MDSTOR
   
    DEFINE MDSTOR <

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
; Register allocations on target machine, [LOWL] 2.7
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

; The following are reservations for the LOWL A, B and C regiters.
   LOWL.A=1         ; LOWL-machine A register, the numerical accumulator
   LOWL.B=2         ; LOWL-machine B register, the index register
   LOWL.C=3         ; LOWL-machine C register, the character register

; The following registers aid operations at the target-machine level. These
; registers are not LOWL registers and are not directly accessible from LOWL code.
   tmp=0            ; register 0 is used implicitly in several places
   ac1=4            ; general purpose accumulator and division quotient
   ac2=ac1+1        ; general purpose accumulator and division remainder
   index=6          ; general purpose pointer
   sp=15            ; subroutine stack pointer
   ; Unused registers: 7 thru 14


; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
; Machine-dependent constants for LOWL implementation, [LOWL] 2.6
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

; Constants which define LOWL datatypes, in target-machine wordsize
   LNM=1                ; number of fullwords needed for numeric values
   LCH=1                ; number of fullwords needed for character values
   LICH=1               ; inverse of LCH

; Core LOWL constants which define special characters
   NLREP=10             ; newline character
   SPREP=32             ; space character
   TABREP=9             ; tab character
   QUTREP=34            ; double-quote character
   CRREP=13             ; carriage return; not a core LOWL special character

; Additional constants for ML/I implementation, [LSUP] passim
   SLREP=2              ; STX, ML/I internal marker for start of text line
   STOPCD=3             ; ETX, ML/I internal marker for end of text line
   bigint=34359738367   ; biggest integer that ML/I can handle, 2^35 - 1
   LHV=32*LNM           ; number of fullwords in the hash table
   hsmask=LHV-1         ; hash mask to produce a number 0 le N lt LHV


; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
; Program layout, working storage and stacks
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

;    LOWL logic stack, [LOWL] 2.11.9
   MILLEN=5000
MILSTK::   block   MILLEN

;    Subroutine call-and-return stack, [LOWL] 2.11.6
    sublen=1000
substk::   block   sublen

;    ML/I system variable reservations, [LSUP] 2.2
s11:  exp   0       ; S11 = 0 means don't suppress debug stream, otherwise suppress
s10:  exp   0       ; S10 = 0 means don't suppress results stream, otherwise suppress
      exp   0       ; S9  : not defined
      exp   0       ; S8  : not defined
      exp   0       ; S7  : not defined
      exp   0       ; S6  = pseudo alphanumeric character
      exp   0       ; S5  = count of processing errors
      exp   0       ; S4  = 0 means don't suppress context print-out on MC-NOTE, 
                    ;       otherwise suppress
      exp   0       ; S3  = 0 means give error message if warning marker 
                    ;       is not followed by macro name, 
                    ;       otherwise, don't give error message
      exp   0       ; S2  = source text line number
      exp   0       ; S1  = 0 means don't insert startlines on input, otherwise insert
sysvar::   
      exp   11      ; system variables S1 to S11 used in this implementation

;    Working storage for MDCONV
nstrng:      block   20   ; assembly area for numeric strings

;    Working storage for MDOP
signqu:      exp   0   ; work area to figure out sign of division

; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
; Input, results and debug I/O streams, [LSUP] 2.1
; = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

;    Working storage for default ML/I input stream, "INPUT.MLI"
        ischan=1
isblk:  exp   .IOASC
        sixbit   /DSK/
        xwd   0,isbuf
isbuf:  block   3
isfnam: .RBEXT
        0
        sixbit   /INPUT/
        sixbit   /MLI/

;   Working storage for default ML/I results stream, "RESULT.OUT"
        oschan=2
osblk:  exp   .IOASC
        sixbit   /DSK/
        xwd   osbuf,0
osbuf:  block   3
osfnam: .RBEXT
        0
        sixbit   /RESULT/
        sixbit   /OUT/

;   Working storage for ML/I debug stream, "DEBUG.ERR"
        dbchan=3
dbblk:  exp   .IOASC
        sixbit   /DSK/
        xwd   dbbuf,0
dbbuf:  block   3
dbfnam: .RBEXT
        0
        sixbit   /DEBUG/
        sixbit   /ERR/


>   ; end of macro MDSTOR

        END
